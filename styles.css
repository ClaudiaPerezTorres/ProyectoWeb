h1, h2, p {
    text-align: center;
  }
  
  h1{
    margin-top: 0;
    margin-bottom: 15px;
  }

.captura_datos{
    width: 80%;
    background-image: url(imagenes/captura_datos.PNG);
    margin-right: auto;
    margin-left: auto;
    padding: 20px;
    /*El ancho actual del menú siempre tomará un 80% del ancho del elemento body. En una pantalla*/
    /*muy amplia, los items apareceran lejos de sus precios. Añade una propiedad max-width (ancho-máximo)*/
    /* a la clase menu con un valor de 500px para prevenir que se expanda más de lo necesario.*/
    max-width: 500px;
    font-family: sans-serif;
}

.captura_datos, h1,h2{
    font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
    
}

.articulo{
    text-align: left;
    width: 75%;
}

.precio{
    text-align: right;
    width: 25%;
}

/*Puedes darle estilo a todos los elementos p que estén anidados en*/
/* cualquiera de los elementos con la clase item de la siguiente forma:*/
/*los elementos de inline-block solo ocupan el ancho de su contenido. Para extenderlos, añade una propiedad width*/
 .item p{
    display: inline-block;
    width: 49%;
    margin-top: 5px;
    margin-bottom: 5px;
    font-size: 18px;
 }

 hr{
    height: 3px;
    background-color: brown;
    border-color: brown;
 }

 /*FOOTER*/
 
footer {
    font-size: 14px;
  }
/*Para cambiar las propiedades de un enlace cuando el enlace ya ha sido visitado utilizas un pseudo-selector*/
/*el cual luce así a:visited { propertyName: propertyValue; }. Cambia el color del enlace del footer Visit */
/*our website para que sea gris (grey) cuando un usuario ya ha visitado el enlace.*/

a{
    color:black;
  }

  a:visited{
    color:grey;
  }

  /*Puedes cambiar las propiedades de un enlace cuando el ratón pasa sobre él utilizando un pseudo-selector,*/
  /* luce así a:hover { propertyName: propertyValue; */
  a:hover{
    color: brown;
  }

  /*Para cambiar las propiedades de un enlace, cuando el enlace está siendo presionado, utilizas un pseudo-selector,*/
  /* el cual luce así a:active { propertyName: propertyValue*/
  a:active{
    color: white;
  }

  /*COLOR*/
  /*Cuando la propiedad margin tiene dos valores, el primer valor corresponde a margin-top y margin-bottom*/
  /*y el segundo valor corresponde a margin-left y margin-right.*/
  .marker{
    height: 25px;
    width: 200px;
    margin: 10px auto;
  }
/*Como puedes ver, la función linear-gradient produce un suave gradiente de rojo a verde. La función linear-gradient*/
/*necesita un mínimo de dos colores como argumentos, pero puede aceptar bastantes más.*/
.red {
  background: linear-gradient(180deg, rgb(122, 74, 14) 0%, rgb(245, 62, 113) 50%, rgb(162, 27, 27) 100%);
  box-shadow: 0px 0px 20px 0px rgba(83, 14, 14, 0.8);
}
/*Los valores hexadecimales empiezan con el carácter #, siguiendo seis caracteres entre 0-9 y A-F. */
/* primer par de caracteres representa el rojo, el segundo el verde y el tercero el azul. Pr ejemplo, #4B5320.*/
/*Seguramente estés familiarizado con valores en base 10, o decimales, los cuales van de 0 a 9. Hexadecimales,*/
/* o valores en base 16, van de 0 a 9 y a continuación de A a F: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F*/
/*Para los colores en hexadecimal, 00 es 0% de ese color, y FF es 100%. De tal manera que #00FF00 se traduce en 0% rojo,*/
/*100% verde y 0% azul, siendo equivalente a rgb(0, 255, 0).*/

  .green{
    background: linear-gradient(180deg, #55680D, #71F53E, #116C31);
    box-shadow: 0px 0px 20px 0px #3B7E20CC;
  }
/*Otra forma de representar colores es el modelo HSL, siglas de hue, saturation y lightness*/
/*(matiz, saturación y luminosidad). La saturación es la intensidad de un color desde 0%, o gris,*/
/* hasta 100% para el color puro. Debe añadir el signo de porcentaje % a los valores de saturación y luminosidad.*/
  .blue {
    background: linear-gradient(hsl(186, 76%, 16%), hsl(223,90%, 60%), hsl(240,56%,42%));
    box-shadow: 0px 0px 20px 0px  hsl(223, 59%, 31%, 0.8);
  }

  .container{
    background-color: rgb(0, 0, 0);
    padding: 10px 0;
  }

  .sleeve{
    width: 110px;
    height: 25px;
    /*La función rgba funciona igual que la función rgb, pero toma un número más de 0 a 1.0 para el canal alfa:*/
    /*rgba(redValue, greenValue, blueValue, alphaValue);*/
    background-color: rgba(255, 255, 255, 50%);

    /*Opacity describe cuán opaco o no transparente es algo. Por ejemplo, una pared sólida es opaca y no puede pasar la luz.*/
    /*Pero un vaso para beber es mucho más transparente, y puedes ver a través del vaso hacia el otro lado. Con la propiedad*/
    /*CSS opacity, puede controlar cuán opaco o transparente es un elemento. Con el valor 0, o 0%, el elemento será */
    /*transparente, y en 1.0, o 100%, el elemento será completamente opaco como lo es por defecto.*/
    /*opacity: 0.5;*/
    /*Los bordes tienen varios estilos para elegir. Puede ser una línea continua (solid) o discontinua (dashed), */
    /* incluso una línea punteada (dotted) si lo prefieres. Lo normal es que sean líneas continuas.*/
    border-left: 10px double rgba(0, 0, 0, 75%);
  }

  .cap{
    width: 60px;
    height: 25px;
  }

  .cap, .sleeve{
    display:inline-block;
  }